<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- namespace：必须有值，自定义的唯一字符串  推荐使用：dao 接口的全限定名称 -->
<mapper namespace="product.mapper.ProductMapper">
    <!-- <select>: 查询数据， 标签中必须是 select 语句 id: sql 语句的自定义名称，推荐使用 dao 接口中方法名称，
      使用名称表示要执行的 sql 语句 resultType: 查询语句的返回结果数据类型，使用全限定类名 -->
    <resultMap id="BaseResultMap" type="domain.Product" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Mar 24 15:52:45 CST 2022.
        -->
        <id column="pid" property="pid" jdbcType="INTEGER" />
        <result column="pname" property="pname" jdbcType="VARCHAR" />
        <result column="pprice" property="pprice" jdbcType="INTEGER" />
        <result column="stock" property="stock" jdbcType="INTEGER" />
    </resultMap>


    <select id="findByPid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--要执行的 sql 语句-->
        select pid,pname,pprice,stock from shop_product where pid=#{pid}
    </select>

    <insert id="insert" parameterType="domain.Product">
        insert into shop_product(pid,pname,pprice,stock) values(#{pid},#{pname},#{pprice},#{stock})
    </insert>

    <update id="update" parameterType="domain.Product">
        update shop_product set pname=#{pname},pprice=#{pprice},stock=#{stock} where pid=#{pid}
    </update>

    <delete id="delete" parameterType="java.lang.Integer">
        delete from shop_product where pid=#{pid}
    </delete>

    <update id="update_stock">
        update shop_product set stock=#{stock} where pid=#{id}
    </update>
</mapper>